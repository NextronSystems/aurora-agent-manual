Configuration
=============

Aurora uses the YAML format for its configuration file. All values set in the config file can also be used as command line flags. 

There are two modes of operation:

1. Aurora started directly from the command line, optionally using a config passed with the ``--config`` / ``-c`` flag
2. Aurora started as a service (see chapter :doc:`installation </usage/installation>` for more details) with a config file located in ``C:\Program Files\Aurora-Agent\agent-config.yml``

Configuration Profiles
----------------------

To facilitate the use of Aurora, four configuration files are part of the Aurora package:

1. Minimal
2. Reduced
3. Standard
4. Intense 

These profiles are explained below in some detail. If you need further information, you can also inspect the configuration files directly.

Minimal 
~~~~~~~

The ``minimal`` configuration file limits Aurora process priority and CPU usage to a low level. It deactivates the following ETW sources:

- Registry
- Image Loads 
- Raw Disk Access
- Process Access
- Create Remote Thread
- Kernel Handles


Reduced 
~~~~~~~

The ``reduced`` configuration file deactivates expensive ETW log sources and limits Aurora CPU usage. It deactivates the following ETW sources:

- Registry
- Raw Disk Access
- Process Access
- Kernel Handles

Standard
~~~~~~~~

The ``standard`` configuration file deactivates very expensive ETW log sources and limits Aurora CPU usage. It deactivates the following ETW sources:

- Registry
- Raw Disk Access
- Kernel Handles

Intense 
~~~~~~~

All possible ETW log source are activated. 

WARNING: This preset uses the most system resources and can put the system under heavy load, especially if a process accesses many registry keys in a short amount of time. 

We recommend using this preset only on a very selective set of systems or in cases in which maximum detection is required. 

Custom Profiles
~~~~~~~~~~~~~~~

If you need a more specialized configuration than these predefined ones, you can also create your own configuration for maximal adaptability.

Output Options
--------------

The following output options are available 

- Windows Eventlog (default)
- Log file
- UDP target
- TCP target

Windows Eventlog
~~~~~~~~~~~~~~~~

By default Aurora writes its event into the Windows event log "Application". To review the events use the Windows "EventViewer". Make sure to check the "Details" tab to see all fields and values.

.. figure:: ../images/windows-eventlog-details.png
   :target: ../images/windows-eventlog-details.png
   :alt: Aurora Events in Windows Eventlog

ASGARD Analysis Cockpit 
~~~~~~~~~~~~~~~~~~~~~~~

Whenever you install an ASGARD Agent, the controlled Aurora Agent Services gets its configuration automatically. In a default setup, all logs generated by an Aurora Agent will be relayed via an ASGARD to an Analysis Cockpit system.

False positive filtering
------------------------
When encountering false positives or known anomalies, besides reporting them, you can also exclude them using a false positive filter file and passing it to Aurora
via the ``--false-positive-filter-file`` option.

The file passed should contain a regular expression per line; any log lines where any of these false positive regexps matches
will not be logged.

Custom Signatures
-----------------
Sigma rules and IOCs can be passed to Aurora using the ``--rules-path`` and ``--ioc-path`` paremeters. These parameters default to the built-in rules and IOCs at 
``signatures/sigma-rules`` and ``signatures/iocs`` and the provided paths for custom signatures at ``custom-signatures/sigma-rules`` and ``custom-signatures/iocs`` respectively. 

IOCs follow the same format that THOR IOCs do; the full description can be found in the `THOR manual <https://thor-manual.nextron-systems.com/en/latest/usage/custom-signatures.html#simple-iocs>`_.

Both IOCs and sigma rules can be encrypted using the ``encrypt`` function in Aurora Agent Util. Aurora will automatically decrypt encrypted signatures at startup. 
This functionality is only available in the full version of Aurora.
